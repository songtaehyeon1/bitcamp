<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bitcamp.admin.AdminDAOImp">
	<!-- 총게시판 게시물수 -->
	<select id="totalboardcnt" resultType="int">
		SELECT enquiry_no+review_no totalboardcnt FROM (select count(enquiry_no) enquiry_no from board_enquiry),(select count(review_no) review_no from board_review)
	</select>
	<!-- 오늘 게시판 게시물수 -->
	<select id="todayboardcnt" resultType="int">
		SELECT enquiry_no+review_no todayboardcnt FROM (select count(enquiry_no) enquiry_no from board_enquiry where to_char(enquiry_writedate,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')),(select count(review_no) review_no from board_review where to_char(review_writedate,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD'))
	</select>
	<!-- 오늘 댓글수 -->
	<select id="todayreplycnt" resultType="int">
		SELECT e_reply_no+r_reply_no todayreplycnt FROM (select count(e_reply_no) e_reply_no from enquiry_reply where to_char(e_reply_writedate,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')),(select count(r_reply_no) r_reply_no from review_reply where to_char(r_reply_writedate,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD'))
	</select>
	<!-- 오늘 회원 가입 수 -->
	<select id="todayMembercnt" resultType="int">
		select count(userno) from member where to_char(regdate,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')
	</select>
	<!-- 총 회원수 -->
	<select id="totalMembercnt" resultType="int">
		select count(userno) from member
	</select>
	<!-- 오늘 탈퇴 회원 -->
	<select id="todayWithdrawalcnt" resultType="int">
		select count(userno) from m_withdrawal where to_char(withdrawaldate,'YYYY-MM-DD') = to_char(withdrawaldate,'YYYY-MM-DD')
	</select>
	<!-- 토탈 오더 -->
	<select id="totalOrdercnt" resultType="int">
		select count(o_no) from ordertable	
	</select>
	<!-- 오늘 오더 -->
	<select id="todayOrdercnt" resultType="int">
		select count(o_no) from ordertable where to_char(order_date,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')
	</select>
	<select id="todayreturncnt" resultType="int">
		select count(o_no) from return where to_char(return_date,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')
	</select>
	<select id="todayCancelcnt" resultType="int">
		select count(o_no) from cancel where to_char(cancel_date,'YYYY-MM-DD') = to_char(sysdate,'YYYY-MM-DD')
	</select>
	<!-- 접속자 -->
	<select id = "todayAccessor" resultType = "int">
		select count(accessor_date) from accessor where to_char(accessor_date) = to_char(sysdate)
	</select>
	<select id = "yesterdayAccessor" resultType = "int">
		select count(accessor_date) from accessor where to_char(accessor_date) = to_char(sysdate - 1)
	</select>
	<select id = "totalAccessor" resultType = "int">
		select count(accessor_date) from accessor
	</select>
	<!-- 기본정보 -->
	<select id="basicinfoselect" resultType="kr.co.bitcamp.admin.BasicinfoVO">
		select * from basic_info
	</select>
	<!-- 기본정보 업데이트 -->
	<update id="basicinfoupdate" parameterType="kr.co.bitcamp.admin.BasicinfoVO">
		update basic_info set corpname=#{corpname},ceoname=#{ceoname},licenseno=#{licenseno},reportno=#{reportno},corptel=#{corptel},corpzipcode=#{corpzipcode},corpaddr=#{corpaddr},managername=#{managername},manageremail=#{manageremail},kakao=#{kakao},instagram=#{instagram},account1=#{account1},account1bank=#{account1bank},account1name=#{account1name},account2=#{account2},account2bank=#{account2bank},account2name=#{account2name},account3=#{account3},account3bank=#{account3bank},account3name=#{account3name},tel=#{tel},memo=#{memo}
	</update>
	<!-- 상품 추가 -->
	<insert id="productWrite"
		parameterType="kr.co.bitcamp.product.ProductVO">
		insert into
		product(c_no,p_no,p_name,price,p_commnet,p_filename1,p_filename2,p_filename3,p_filename4,p_filename5,delivery_fee,day_price)
		values(#{c_no},pno_sq.nextval,#{p_name},#{price},#{p_commnet,},#{p_filename1},#{p_filename2},#{p_filename3},#{p_filename4},#{p_filename5},#{delivery_fee},#{day_price})
	</insert>
	<!-- 상품 수정 -->
	<update id="productEdit"
		parameterType="kr.co.bitcamp.product.ProductVO">
		update product set
		c_no=#{c_no},p_name=#{p_name},price=${price},p_commnet=#{p_commnet},p_deltype
		=#{p_deltype},
		<if test="p_filename1 != null">p_filename1=#{p_filename1},</if>
		<if test="p_filename2 != null">p_filename2=#{p_filename2},</if>
		<if test="p_filename3 != null">p_filename3=#{p_filename3},</if>
		<if test="p_filename4 != null">p_filename4=#{p_filename4},</if>
		<if test="p_filename5 != null">p_filename5=#{p_filename5},</if>
		delivery_fee=${delivery_fee},day_price =#{day_price} where p_no =
		${p_no}
	</update>
	<!-- 상품 1개선택 -->
	<select id="productSelect"
		parameterType="kr.co.bitcamp.product.ProductVO"
		resultType="kr.co.bitcamp.product.ProductVO">
		select
		p_no,c_no,p_name,price,delivery_fee,p_commnet,p_filename1,p_filename2,p_filename3,p_filename4,p_filename5,c_name,p_deltype,day_price
		from product left join category using(c_no) where p_no=${param1}
	</select>
	<!-- 상품 3개 선택 -->
	<select id="getmainproduct" resultType="kr.co.bitcamp.product.ProductVO">
		select p_no,c_no,p_name,price,delivery_fee,p_commnet,p_filename1 from (select p_no,c_no,p_name,price,delivery_fee,p_commnet,p_filename1,p_filename2,p_filename3,p_filename4,p_filename5 from product order by p_date desc) where ROWNUM <![CDATA[<=]]> 3
	</select>
	<!-- sno_sq의 nextval 반환 -->
	<select id="getsno_sq" resultType="int">
		select last_number from
		user_sequences where sequence_name ='SNO_SQ'
	</select>
	<!-- 재고등록 -->
	<insert id="addStock">
		insert into product_stock(s_no,p_no,note) values
		(sno_sq.nextval,${param1},#{param2})
	</insert>
	<update id="delimg">
		update product set ${param2} = null where p_no =
		${param1}
	</update>
	<!-- 관리자 로그인 -->
	<select id="adminLogin"
		resultType="kr.co.bitcamp.admin.AdminLoginVO"
		parameterType="kr.co.bitcamp.admin.AdminLoginVO">
		select * from adminlogin where adminId = #{adminId} and
		adminpwd = #{adminpwd}
	</select>
	<!-- 모든 카테고리를 반환 -->
	<select id="adminallCategorySelect"
		resultType="kr.co.bitcamp.category.CategoryVO">
		select c_no,c_name from category order by c_no
	</select>
	<!-- 카테고리안의 상품수를 반환 -->
	<select id="cntCategoryProduct" resultType="int">
		select count(p_no)
		cnt from (select * from product right join category using(c_no) where
		p_deltype='Y') where
		c_no=#{param1} GROUP by c_no, c_name
	</select>
	<!-- 카테고리 선택 -->
	<select id="adminselectCategory"
		resultType="kr.co.bitcamp.category.CategoryVO">
		select c_no,c_name from category where c_no =#{param1}
	</select>
	<!-- 카테고리 수정 -->
	<update id="adminupdateCategory"
		parameterType="kr.co.bitcamp.category.CategoryVO">
		update category set c_name=#{c_name} where c_no=#{c_no}
	</update>
	<!-- 모든 상품 리스트 -->
	<select id="allProductSelect"
		resultType="kr.co.bitcamp.product.ProductVO">
		select
		ROWNUM,p_no,c_no,p_name,price,delivery_fee,p_commnet,p_filename1,p_filename2,p_filename3,p_filename4,p_filename5,p_date,c_name
		from product left join category using(c_no) where p_deltype='Y' order by p_no desc
	</select>
	<!-- 모든 멤버 리스트 -->
	<select id="allMemberList"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.member.MemberVO">
		select * from (
		select * from (
		select
		userno,userid,userpwd,username,useremail,usertel,regdate,usermile,userzipcode,useraddr,useraddrdetail,userlogdate
		from member
		<where>
			userjointype = 'Y'
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="userno != 0">
				AND userno = ${userno}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(regdate,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>
		order by userno desc)
		where rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by userno asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by userno desc
	</select>
	<!-- 회원 한명 선택 -->
	<select id="selectMember" parameterType="int"
		resultType="kr.co.bitcamp.member.MemberVO">
		select * from member where userno = ${param1}
	</select>
	<!-- 회원 정보 수정 -->
	<update id="memberEdit"
		parameterType="kr.co.bitcamp.member.MemberVO">
		update member set useremail = #{useremail}, usertel =
		#{usertel}, username =#{username}, userzipcode =
		#{userzipcode},useraddr = #{useraddr}, useraddrdetail =
		#{useraddrdetail} where userno = ${userno}
	</update>
	<!-- 모든 탈퇴 회원 리스트 -->
	<select id="allWithdrawalList"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.member.WithdrawalVO">
		select * from (
		select * from (
		select
		userno,userid,username,reason,withdrawaldate from m_withdrawal
		<where>
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="userno != 0">
				AND userno = ${userno}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(withdrawaldate,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
				
			</if>
		</where>
		order by withdrawaldate desc)
		where rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by withdrawaldate asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by withdrawaldate desc
	</select>


	<!-- 모든품목리스트 & 페이징 -->
	<select id="allpList"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.product.ProductVO">
		select * from (
		select * from (
		select
		p_no,c_no,p_name,price,delivery_fee,p_commnet,p_filename1,p_filename2,p_filename3,p_filename4,p_filename5,to_char(p_date,'YYYY-MM-DD')
		p_date,c_name,p_deltype,day_price
		from product left join category
		using(c_no)
		<where>
			<if
				test="p_deltype!= null and p_deltype !='' and p_deltype !='All'">
				AND p_deltype = #{p_deltype}
			</if>
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="c_no != 0">
				AND c_no = ${c_no}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(p_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>
		order by p_no desc)
		where rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by p_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by p_no desc
	</select>

	<!-- 모든 품목의 재고 리스트 -->
	<select id="allStockList"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.admin.StockVO">
		select * from (
		select * from (
		select rownum,s_no,p_no,p_name,
		to_char(s_regdate,'YYYY-MM-DD') s_regdate,s_deltype,note
		from product_stock left join
		product using(p_no)
		<where>
			p_no = ${p_no}
			<if
				test="s_deltype!= null and s_deltype !='' and s_deltype !='All'">
				AND s_deltype = #{s_deltype}
			</if>
		</where>
		order by p_no desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by s_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by s_no desc
	</select>
	<!-- 주문 하나 선택 -->
	<select id="selectAdminOrder" resultType="kr.co.bitcamp.order.OrderVO">
		select
		o.o_no,nvl(o.userno,0) userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,payment_price,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,nvl(userid,'비회원') userid,cash_time,card_time,oname,otel,oemail,ozipcode,oaddr,oaddrdetail,opassword,rname,rtel,rzipcode,raddr,raddrdetail,rcommnet,delivery_code
		from ( select O_NO,payment_price, USERNO,userid, R_NO, OI_NO, MILEAGE, TOTALPRICE, ORDER_DATE, DELIVERY_DATE, DELIVERY_ARRIVAL_DATE,delivery_code, DELIVERY_STATUS, PAYMENT_TYPE, card.PAYMENT_TIME card_time, BANK, DEPOSITOR, cash.PAYMENT_TIME cash_time from ordertable left join card card using(o_no) left join cash cash using(o_no) left join member m using(userno)) o 
        inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no where o.o_no = #{param1}
	</select>
	<!-- 주문의 품목 리스트 -->
	<select id="orderProductList" resultType="kr.co.bitcamp.order.OrderVO">
		 select p_no,o_no,p_name,price,day_price,p_count from order_product left join product using(p_no) where o_no = #{param1}
	</select>
	<!-- 주문 수정 -->
	<update id="orderEdit" parameterType="kr.co.bitcamp.order.OrderVO">
		update Recipient set rname=#{rname}, rtel=#{rtel}, rzipcode = #{rzipcode}, raddr =#{raddr}, raddrdetail =#{raddrdetail},rcommnet=#{rcommnet} 
	</update>
	<update id="orderPayEdit" parameterType="kr.co.bitcamp.order.OrderVO">
		update ordertable set payment_price=${payment_price} where o_no = #{o_no} 
	</update>
	<!-- 선택 주문 배송상태 일괄 변경 -->
	<update id="allD_statusUpdate">	
		update ordertable set delivery_status = #{param2}
		<if test="param2 == '배송중'">
			, delivery_date=sysdate
			, delivery_arrival_date = null
		</if>
		<if test="param2 == '배송완료'">
			, delivery_arrival_date=sysdate
		</if>
		<if test="param2 == '입금대기' or param2 =='결제완료'">
			, delivery_date = null
			, delivery_arrival_date = null
		</if>		
		where o_no = #{param1}
	</update>
	<!-- 선택 주문 취소 -->
	<insert id="allD_statuscancel">
		insert into return(o_no,return_date,return_status) values(#{param1},sysdate,'반품요청')
	</insert>
	<!-- 선택 주문 취소 -->
	<update id="allD_statusreturn">
		insert into cancel(o_no,cancel_date,cancel_status) values(#{param1},sysdate,'취소요청')
	</update>
	<!-- 송장 추가 -->
	<update id="updateadminInvoice">
		update ordertable set delivery_code=#{param2},delivery_date=#{param3},delivery_arrival_date =#{param4}
		<choose>
			<when test="param4 !=null and param4 !=''">, delivery_status='배송완료' </when>
			<otherwise>
				, delivery_status='배송중'
			</otherwise>		
		</choose>
		where o_no=#{param1}
	</update>
	<!-- 모든 주문 리스트 -->
	<select id="allOrderSelect"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.order.OrderVO">
		select * from (
		select * from (
		select
		o.o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!= 0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno!=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card'">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash'">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
							
			<if test="delivery_status != null">
				AND delivery_status in
				<foreach collection="delivery_status" item="delivery_status"
					index="i" open="(" close=")" separator=",">
					#{delivery_status}
				</foreach>
			</if>
			<if test="delivery_status ==null">
				delivery_status not in('취소','취소요청''반품','반품요청')
			</if>
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_price != null and s_price !='' and (e_price == null or e_price =='')">
				AND totalprice <![CDATA[>=]]>${s_price}
			</if>
			<if
				test="(s_price == null or s_price =='') and e_price != null and e_price !=''">
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_price != null and e_price != null and s_price !='' and e_price !=''">
				AND totalprice <![CDATA[>=]]>${s_price}
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='order_date'">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='delivery_arrival_date'">
				AND to_char(delivery_arrival_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='delivery_date'">
				AND to_char(delivery_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>
		order by order_date desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by order_date asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by order_date desc
	</select>
	<!-- 모든 주문 취소 -->
	<select id="allOrderCancelSelect"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.order.OrderVO">
		select * from (
		select * from (
		select
		o.o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!=0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno!=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card'">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash'">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
			delivery_status in('취소요청','취소')	
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_price != null and s_price !='' and (e_price == null or e_price =='')">
				AND totalprice <![CDATA[>=]]>${s_price}
			</if>
			<if
				test="(s_price == null or s_price =='') and e_price != null and e_price !=''">
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_price != null and e_price != null and s_price !='' and e_price !=''">
				AND totalprice <![CDATA[>=]]>${s_price}
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>			
		</where>
		order by o_no desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by o_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by o_no desc
	</select>
	
	<!-- 모든 반품 취소 -->
	<select id="allOrderReturnSelect"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="kr.co.bitcamp.order.OrderVO">
		select * from (
		select * from (
		select
		o.o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!=0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno!=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card'">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash'">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
			delivery_status in('반품요청','반품')	
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_price != null and s_price !='' and (e_price == null or e_price =='')">
				AND totalprice <![CDATA[>=]]>${s_price}
			</if>
			<if
				test="(s_price == null or s_price =='') and e_price != null and e_price !=''">
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_price != null and e_price != null and s_price !='' and e_price !=''">
				AND totalprice <![CDATA[>=]]>${s_price}
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>			
		</where>
		order by o_no desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by o_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by o_no desc
	</select>
	<!-- 전체 품목 페이지 수 구하기(검색) -->
	<select id="getTotalRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO" resultType="int">
		select count(p_no) from product left join category using(c_no)
		<where>
			<if
				test="p_deltype!= null and p_deltype !='' and p_deltype !='All'">
				AND p_deltype = #{p_deltype}
			</if>
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="c_no != 0">
				AND c_no = ${c_no}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' ">
				AND to_char(p_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>


	</select>
	<!-- 주문리스트 전체 페이지 수 구하기 -->
	<select id="getOrderTotalRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO" resultType="int">
		select count(o_no) from(
		select
		o.o_no o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!=0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno !=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card' and payment_type !=''">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash' and payment_type !=''">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
		
			<if test="delivery_status != null and delivery_status !=''">
				AND delivery_status in
				<foreach collection="delivery_status" item="delivery_status"
					index="i" open="(" close=")" separator=",">
					#{delivery_status}
				</foreach>
			</if>							
		
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_price != null and e_price != null and s_price !='' and e_price !=''">
				AND totalprice <![CDATA[>=]]>${s_price}
				and totalprice <![CDATA[<=]]>${e_price}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='order_date'">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='delivery_arrival_date'">
				AND to_char(delivery_arrival_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !='' and ndate =='delivery_date'">
				AND to_char(delivery_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>
		)


	</select>
	<!-- 취소 전체 페이지 수 구하기 -->
	<select id="getOrderCancelTotalRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="int">
		select count(o_no) from(
		select * from (
		select * from (
		select
		o.o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!=0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno!=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card'">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash'">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
			delivery_status in('취소요청','취소')	
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
				
			</if>			
		</where>
		order by o_no desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by o_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by o_no desc)
	</select>
	<!-- 반품 수 -->
	<select id="getOrderReturnTotalRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO"
		resultType="int">
		select count(o_no) from(
		select * from (
		select * from (
		select
		o.o_no,o.userno,o.r_no,o.oi_no,mileage,
		totalprice,to_char(order_date,'YYYY-MM-DD')
		order_date,to_char(delivery_date,'YYYY-MM-DD') delivery_date,
		to_char(delivery_arrival_date,'YYYY-MM-DD')
		delivery_arrival_date,delivery_status,payment_type,rname,oname
		<if test="userno !=null and userno!=0 and userno !=''">
			,userid
		</if>
		from ordertable o
		inner join order_info i on o.oi_no = i.oi_no
		inner join Recipient r on o.r_no = r.r_no
		<if test="userno !=null and userno!=0 and userno !=''">
			inner join member m on o.userno = m.userno
		</if>
		<if test="payment_type !=null and payment_type=='card'">
			inner join card on o.o_no = card.o_no
		</if>
		<if test="payment_type !=null and payment_type=='cash'">
			inner join cash on o.o_no = cash.o_no
		</if>
		<where>
			delivery_status in('반품요청','반품')	
			<if
				test="searchKey != null and searchWord != null and searchKey != '' and searchWord != ''">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(order_date,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>			
		</where>
		order by o_no desc)
		where
		rownum <![CDATA[<=]]>
		#{pageNum} * #{onePageRecord}
		order by o_no asc)
		where rownum <![CDATA[<=]]>
		<if test="pageNum == totalPage">#{lastPageRecord}</if>
		<if test="pageNum != totalPage">#{onePageRecord}</if>
		order by o_no desc)
	</select>
	<!-- 전체 회원 페이지 수 구하기(검색) -->
	<select id="getTotalMemberRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO" resultType="int">
		select count(userno) from member
		<where>
			userjointype ='Y'
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="userno != 0">
				AND userno = ${userno}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(regdate,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>


	</select>

	<!-- 전체 탈퇴회원 페이지 구하기(검색) -->
	<select id="getTotalWithdrawalRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO" resultType="int">
		select count(userno) from m_withdrawal
		<where>
			<if test="searchKey != null and searchWord != null">
				AND ${searchKey} like '%'||#{searchWord}||'%'
			</if>
			<if test="userno != 0">
				AND userno = ${userno}
			</if>
			<if
				test="s_date != null and e_date != null and s_date !='' and e_date !=''">
				AND to_char(withdrawaldate,'YYYY-MM-DD') between TO_DATE('${s_date}','YYYY-MM-DD')
				and to_date('${e_date}','YYYY-MM-DD')
			</if>
		</where>


	</select>
	<!--해당 품목의 재고 페이지 수 구하기 -->
	<select id="getTotalStockRecord"
		parameterType="kr.co.bitcamp.admin.PagingVO" resultType="int">
		select
		count(p_no) from product_stock
		<where>
			p_no = ${p_no}
			<if
				test="s_deltype!= null and s_deltype !='' and s_deltype !='All'">
				AND s_deltype = #{s_deltype}
			</if>
		</where>
	</select>
	

	<!-- 재고의 예약 확인용 -->
	<select id="adminallSelectProduct" parameterType="int"
		resultType="Integer">
		select s_no from product_stock where p_no = ${param1} and
		s_deltype='Y'
	</select>

	<select id="adminallSelectDate" parameterType="int"
		resultType="String">
		select to_char(stock_date,'YYYYMMDD') from reservate where
		s_no = ${param1}
	</select>
	<!-- 재고의 예약 확인용 -->


	<!-- 재고 삭제 추가 -->
	<update id="delstock" parameterType="int">
		update product_stock set
		s_deltype='N' where s_no = ${param1}
	</update>
	<update id="restoreStock" parameterType="int">
		update product_stock set
		s_deltype='Y' where s_no = ${param1}
	</update>

	<!-- 회원 탈퇴처리 복구처리 -->
	<insert id="insertMemberDel"
		parameterType="kr.co.bitcamp.member.MemberVO">
		insert into
		m_withdrawal(userno,userid,username,reason,withdrawaldate)
		values(${userno},#{userid},#{username},#{reason},sysdate)
	</insert>
	<update id="delMember" parameterType="int">
		update member set
		userjointype='N' where userno = ${param1}
	</update>
	<update id="updateMemberDelType" parameterType="int">
		update member set userjointype='Y' where userno =${param1}	
	</update>
	<delete id="delMemberTodelList">
		delete from m_withdrawal where userno =${param1}
	</delete>
	<!-- 토탈 카드 매출 -->
	<select id="getTodayTotalCard" resultType="String">
		select to_char(nvl(sum(totalprice),0)) totalcard from ordertable where payment_type = 'card' and to_date(order_date)=#{param1}	
	</select>
	<select id="getTodayTotalCash" resultType="String">
		select to_char(nvl(sum(totalprice),0)) totalcash from ordertable where payment_type = 'cash' and to_date(order_date)=#{param1}	
	</select>
	<select id="getTodayTotalsale" resultType="String">
		select to_char(nvl(sum(totalprice),0)) totalsale from ordertable where to_date(order_date)=#{param1}	
	</select>
	
	<select id="total_list" resultType="kr.co.bitcamp.admin.TotalVO">		
		select* from (select sum(totalprice) totalcash,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where payment_type ='cash' GROUP by to_char(order_date,'YYYY-MM-DD')) cash 
		left join (select sum(totalprice) totalcard,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where payment_type ='card' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(totalprice) totalsale,to_char(order_date,'YYYY-MM-DD') order_date from ordertable GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date) 
     	left join (select sum(payment_price) totalpayment,to_char(order_date,'YYYY-MM-DD') order_date from ordertable GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date) 
        left join (select sum(total_delivery_fee) totaldfee,to_char(order_date,'YYYY-MM-DD') order_date from ordertable GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(totalprice,0)) totalcprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date) 
        left join (select sum(nvl(totalprice,0)) totalrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(totalprice,0)) cardcprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') and payment_type ='card' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(totalprice,0)) cardrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') and payment_type ='card' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(totalprice,0)) cashcprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') and payment_type ='cash' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(totalprice,0)) cashrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') and payment_type ='cash' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(payment_price,0)) totalpaycprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date) 
        left join (select sum(nvl(payment_price,0)) totalpayrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(payment_price,0)) cardpaycprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') and payment_type ='card' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(payment_price,0)) cardpayrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') and payment_type ='card' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(payment_price,0)) cashpaycprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('취소','취소요청') and payment_type ='cash' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        left join (select sum(nvl(payment_price,0)) cashpayrprice,to_char(order_date,'YYYY-MM-DD') order_date from ordertable where ordertable.delivery_status in('반품','반품요청') and payment_type ='cash' GROUP by to_char(order_date,'YYYY-MM-DD')) card using(order_date)
        where to_date(order_date) between #{db_startDate} and #{db_endDate}		
	</select>



</mapper>